# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.4.3"
VAGRANTFILE_API_VERSION = "2"

# Configuration
numSlaves = 3
masterMemory = 2048
slaveMemory = 2048
baseAddress = "10.211.55"

boxName="centos7"
javaVersion = "7u79"
hadoopVersion="2.7.1"
sparkVersion="1.6.0"

# YOU SHOULDN'T CHANGE ANYTHING FROM HERE
resources_dir="/home/vagrant/resources"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    addresses = (0..numSlaves).to_a.map do |i|
        if i < 10
            "#{baseAddress}.10#{i}"
        elsif i < 100
            "#{baseAddress}.1#{i}"
        else
            "#{baseAddress}.#{i}"
        end
    end
        
    addresses[1, numSlaves].each do |ip|
        i = addresses.index(ip)
        nodename = "slave#{i}"
        
        config.vm.define "#{nodename}" do |slave|
            slave.vm.box = "#{boxName}"
            slave.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
            slave.vm.synced_folder ".", "/vagrant", disabled: true
            slave.vm.provision "file", source: "resources/", destination: "#{resources_dir}"
            slave.vm.provision "file", source: "scripts/common.sh", destination: "#{resources_dir}/common.sh"
            slave.vm.provider "virtualbox" do |virtualbox|
              virtualbox.name = "#{nodename}"
              virtualbox.customize ["modifyvm", :id, "--memory", "#{slaveMemory}"]
            end
            slave.vm.network :private_network, ip: "#{ip}"
            slave.vm.hostname = "#{nodename}"
			slave.vm.provision "shell", inline: "source ~/.bashrc && [ -z \"$VAGRANT_RES_DIR\" ] && echo \"export VAGRANT_RES_DIR=#{resources_dir}\" >> ~/.bashrc"
            slave.vm.provision "shell", path: "scripts/setup-centos.sh"
            slave.vm.provision "shell", path: "scripts/setup-centos-hosts.sh", args: addresses
            slave.vm.provision "shell", path: "scripts/setup-centos-ssh.sh", args: "-a"
            slave.vm.provision "shell", path: "scripts/setup-java.sh", args: "-j #{javaVersion}"
            slave.vm.provision "shell", path: "scripts/setup-hadoop.sh", args: "-h #{hadoopVersion}"
            slave.vm.provision "shell", path: "scripts/setup-hadoop-slaves.sh", args: "-t #{numSlaves}"
            slave.vm.provision "shell", path: "scripts/setup-spark.sh", args: "-s #{sparkVersion}"
            slave.vm.provision "shell", path: "scripts/setup-spark-slaves.sh", args: "-t #{numSlaves}"
        end
    end
    
    config.vm.define "master" do |master|
        master.vm.box = "#{boxName}"
        master.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
        master.vm.synced_folder ".", "/vagrant", disabled: true
        master.vm.provision "file", source: "resources/", destination: "#{resources_dir}"
		master.vm.provision "file", source: "master/hdfs/", destination: "#{resources_dir}"
        master.vm.provision "file", source: "scripts/common.sh", destination: "#{resources_dir}/common.sh"
        master.vm.provider "virtualbox" do |provider|
            provider.name = "master"
            provider.customize ["modifyvm", :id, "--memory", "#{masterMemory}"]
        end
        master.vm.network :private_network, ip: addresses[0]
        master.vm.hostname = "master"
		master.vm.provision "shell", inline: "source ~/.bashrc && [ -z \"$VAGRANT_RES_DIR\" ] && echo \"export VAGRANT_RES_DIR=#{resources_dir}\" >> ~/.bashrc"
        master.vm.provision "shell", path: "scripts/setup-centos.sh"
        master.vm.provision "shell", path: "scripts/setup-centos-hosts.sh", args: addresses
        master.vm.provision "shell", path: "scripts/setup-centos-ssh.sh", args: "-a -i"
        master.vm.provision "shell", path: "scripts/setup-java.sh", args: "-j #{javaVersion}"
        master.vm.provision "shell", path: "scripts/setup-hadoop.sh", args: "-h #{hadoopVersion}"
        master.vm.provision "shell", path: "scripts/setup-hadoop-slaves.sh", args: "-t #{numSlaves}"
        master.vm.provision "shell", path: "scripts/setup-spark.sh", args: "-s #{sparkVersion}"
        master.vm.provision "shell", path: "scripts/setup-spark-slaves.sh", args: "-t #{numSlaves}"
		master.vm.provision "shell", inline: "hdfs namenode -format"
        master.vm.provision "shell", path: "scripts/start-services.sh", args: "--hadoop", run: "always"
        master.vm.provision "shell", path: "scripts/initialize-hdfs.sh"
		master.vm.provision "shell", path: "master/setup-env.sh"
		master.vm.provision "shell", inline: "chmod +x #{resources_dir}/deploy/spark-submit-yarn"
    end
end
